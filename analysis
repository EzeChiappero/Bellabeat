-- Data Aggregation
SELECT
  Id,
  DATETIME_TRUNC(measure_time, MINUTE) AS Minute,
  AVG(Value) AS AvgValue,
  MAX(Value) AS MaxValue,
  MIN(Value) AS MinValue,
  STDDEV(Value) AS StandarDevValue
FROM
  `my-project-for-da-course-2.bellabeat.heartrate_seconds`
GROUP BY
  Id, Minute;

SELECT
  Id,
  DATETIME_TRUNC(measure_time, HOUR) AS Hour,
  AVG(Value) AS AvgValue,
  MAX(Value) AS MaxValue,
  MIN(Value) AS MinValue,
  STDDEV(Value) AS StandarDevValue
FROM
  `my-project-for-da-course-2.bellabeat.heartrate_seconds`
GROUP BY
  Id, Hour;



--- Data Analysis 1
SELECT
 A.Id,
   * EXCEPT(Id,
   Calories,
   ActivityDay,
   SleepDay,
   SedentaryMinutes,
   LightlyActiveMinutes,
   FairlyActiveMinutes,
   VeryActiveMinutes,
   SedentaryActiveDistance,
   LightActiveDistance,
   ModeratelyActiveDistance,
   VeryActiveDistance),
 I.SedentaryMinutes,
 I.LightlyActiveMinutes,
 I.FairlyActiveMinutes,
 I.VeryActiveMinutes,
 I.SedentaryActiveDistance,
 I.LightActiveDistance,
 I.ModeratelyActiveDistance,
 I.VeryActiveDistance
FROM
 `my-project-for-da-course-2.bellabeat.dailyActivity` A
LEFT JOIN
 `my-project-for-da-course-2.bellabeat.dailyCalories_2` C
ON
 A.Id = C.Id
 AND A.ActivityDay=C.ActivityDay
LEFT JOIN
 `my-project-for-da-course-2.bellabeat.dailyIntensities_2` I
ON
 A.Id = I.Id
 AND A.ActivityDay=I.ActivityDay
 AND A.FairlyActiveMinutes = I.FairlyActiveMinutes
 AND A.LightActiveDistance = I.LightActiveDistance
 AND A.LightlyActiveMinutes = I.LightlyActiveMinutes
 AND A.ModeratelyActiveDistance = I.ModeratelyActiveDistance
 AND A.SedentaryActiveDistance = I.SedentaryActiveDistance
 AND A.SedentaryMinutes = I.SedentaryMinutes
 AND A.VeryActiveDistance = I.VeryActiveDistance
 AND A.VeryActiveMinutes = I.VeryActiveMinutes
LEFT JOIN
 `my-project-for-da-course-2.bellabeat.dailySteps2` S
ON
 A.Id = S.Id
 AND A.ActivityDay=S.ActivityDay
LEFT JOIN
 `my-project-for-da-course-2.bellabeat.sleepDay2` Sl
ON
 A.Id = Sl.Id
 AND A.ActivityDay=Sl.SleepDay;
 


-- Data analysis 2
SELECT
 Id,
 sleep_start AS sleep_date,
 COUNT(logId) AS number_naps,
 SUM(EXTRACT(HOUR
   FROM
     time_sleeping)) AS total_time_sleeping
FROM (
 SELECT
   Id,
   logId,
   MIN(DATE(minute)) AS sleep_start,
   MAX(DATE(minute)) AS sleep_end,
   TIME( TIMESTAMP_DIFF(MAX(minute),MIN(minute),HOUR),
     MOD(TIMESTAMP_DIFF(MAX(minute),MIN(minute),MINUTE),60),
     MOD(MOD(TIMESTAMP_DIFF(MAX(minute),MIN(minute),SECOND),3600),60) ) AS time_sleeping
 FROM
   `my-project-for-da-course-2.bellabeat.minuteSleep`
 WHERE
   value=1
 GROUP BY
   1,
   2)
WHERE
 sleep_start=sleep_end
GROUP BY
 1,
 2
ORDER BY
 3 DESC;



-- Data Analysis 3
DECLARE
 MORNING_START,
 MORNING_END,
 AFTERNOON_END,
 EVENING_END INT64;

SET
 MORNING_START = 6;
SET
 MORNING_END = 12;
SET
 AFTERNOON_END = 18;
SET
 EVENING_END = 21;

WITH
 user_dow_summary AS (
 SELECT
   Id,
   FORMAT_TIMESTAMP("%w", ActivityHour) AS dow_number,
   FORMAT_TIMESTAMP("%A", ActivityHour) AS day_of_week,
   CASE
     WHEN FORMAT_TIMESTAMP("%A", ActivityHour) IN ("Sunday", "Saturday") THEN "Weekend"
     WHEN FORMAT_TIMESTAMP("%A", ActivityHour) NOT IN ("Sunday",
     "Saturday") THEN "Weekday"
   ELSE
   "ERROR"
 END
   AS part_of_week,
   CASE
     WHEN TIME(ActivityHour) BETWEEN TIME(MORNING_START, 0, 0) AND TIME(MORNING_END, 0, 0) THEN "Morning"
     WHEN TIME(ActivityHour) BETWEEN TIME(MORNING_END,
     0,
     0)
   AND TIME(AFTERNOON_END,
     0,
     0) THEN "Afternoon"
     WHEN TIME(ActivityHour) BETWEEN TIME(AFTERNOON_END, 0, 0) AND TIME(EVENING_END, 0, 0) THEN "Evening"
     WHEN TIME(ActivityHour) >= TIME(EVENING_END,
     0,
     0)
   OR TIME(TIMESTAMP_TRUNC(ActivityHour, MINUTE)) <= TIME(MORNING_START,
     0,
     0) THEN "Night"
   ELSE
   "ERROR"
 END
   AS time_of_day,
   SUM(TotalIntensity) AS total_intensity,
   SUM(AverageIntensity) AS total_average_intensity,
   AVG(AverageIntensity) AS average_intensity,
   MAX(AverageIntensity) AS max_intensity,
   MIN(AverageIntensity) AS min_intensity
 FROM
   `my-project-for-da-course-2.bellabeat.hourlyIntesities`
 GROUP BY
   1,
   2,
   3,
   4,
   5),
 intensity_deciles AS (
 SELECT
   DISTINCT dow_number,
   part_of_week,
   day_of_week,
   time_of_day,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.1) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_first_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.2) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_second_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.3) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_third_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.4) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_fourth_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.6) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_sixth_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.7) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_seventh_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.8) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_eigth_decile,
   ROUND(PERCENTILE_CONT(total_intensity,
       0.9) OVER (PARTITION BY dow_number, part_of_week, day_of_week, time_of_day),4) AS total_intensity_ninth_decile
 FROM
   user_dow_summary ),
 basic_summary AS (
 SELECT
   part_of_week,
   day_of_week,
   time_of_day,
   SUM(total_intensity) AS total_total_intensity,
   AVG(total_intensity) AS average_total_intensity,
   SUM(total_average_intensity) AS total_total_average_intensity,
   AVG(total_average_intensity) AS average_total_average_intensity,
   SUM(average_intensity) AS total_average_intensity,
   AVG(average_intensity) AS average_average_intensity,
   AVG(max_intensity) AS average_max_intensity,
   AVG(min_intensity) AS average_min_intensity
 FROM
   user_dow_summary
 GROUP BY
   1,
   dow_number,
   2,
   3)
SELECT
 *
FROM
 basic_summary
LEFT JOIN
 intensity_deciles
USING
 (part_of_week,
   day_of_week,
   time_of_day)
ORDER BY
 1,
 dow_number,
 2,
 CASE
   WHEN time_of_day = "Morning" THEN 0
   WHEN time_of_day = "Afternoon" THEN 1
   WHEN time_of_day = "Evening" THEN 2
   WHEN time_of_day = "Night" THEN 3
END;

 
 
 -- Data Analysis 4
 SELECT A.Id,
  A.Calories,
  H.AvgValue AS AvgHeartRate,
  H.MaxValue AS MaxHeartRate,
  H.MinValue AS MinHeartRate,
  H.StandarDevValue AS StDevHeartRate,
  I.TotalIntensity, 
  S.StepTotal
 FROM `my-project-for-da-course-2.bellabeat.hourlyCalories2` A
FULL OUTER JOIN
  `my-project-for-da-course-2.bellabeat.hourlyHeartrate` H
ON
  A.Id = H.Id
  AND A.ActivityHour = H.Hour
FULL OUTER JOIN
  `my-project-for-da-course-2.bellabeat.hourlyIntensities` I 
ON 
  A.Id = I.Id
  AND A.ActivityHour = I.ActivityHour
FULL OUTER JOIN
  `my-project-for-da-course-2.bellabeat.hourlySteps` S 
ON
  A.Id = S.Id
  AND A.ActivityHour = S.ActivityHour



-- Data Analysis 5
SELECT C.Id,
  I.ActivityMinute,
  C.Calories,
  I.Intensity,
  M.METs,
  ST.Steps,
FROM `my-project-for-da-course-2.bellabeat.minuteCalories` C
FULL OUTER JOIN
 `my-project-for-da-course-2.bellabeat.minuteIntensities` I
ON C.Id = I.Id
  AND C.ActivityMinute = I.ActivityMinute
FULL OUTER JOIN
 `my-project-for-da-course-2.bellabeat.minuteMETs` M
ON C.Id = M.Id
  AND C.ActivityMinute = M.ActivityMinute
FULL OUTER JOIN
`my-project-for-da-course-2.bellabeat.minuteSteps` ST
ON C.Id = ST.Id
  AND C.ActivityMinute = ST.ActivityMinute;

